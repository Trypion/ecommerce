services:
  order-service:
    build:
      context: ..
      dockerfile: order-service/Dockerfile
    container_name: order-service
    ports:
      - "50051:50051"
    networks:
      - ecommerce-net
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://ecommerce:ecommerce@postgres:5432/order_service?sslmode=disable
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/

  payment-service:
    build:
      context: ..
      dockerfile: payment-service/Dockerfile
    container_name: payment-service
    ports:
      - "50052:50051"
    networks:
      - ecommerce-net
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://ecommerce:ecommerce@postgres:5432/payment_service?sslmode=disable
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/

  notification-service:
    build:
      context: ..
      dockerfile: notification-service/Dockerfile
    container_name: notification-service
    ports:
      - "50053:50051"
    networks:
      - ecommerce-net
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: ecommerce
      POSTGRES_PASSWORD: ecommerce
      POSTGRES_DB: ecommerce
    ports:
      - "5432:5432"
    networks:
      - ecommerce-net
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecommerce -d ecommerce"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - ecommerce-net
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

networks:
  ecommerce-net:
    driver: bridge

volumes:
  pgdata:
